import org.apache.spark.sql.types._
import org.apache.spark.sql.SparkSession
import org.apache.spark.SparkConf

object CSOFullFillmentParquetPMExtraction extends App {
/*var runDate = "2020-03-12"
var destinationPath = "/data/scm/rbtch/temp/azure/pmparquetfile"
var csoPath = "/data/scm/archive/cso/intraday"*/

val runDate=args(0)
val csoPath=args(1)
val destinationPath=args(2)

val spark = SparkSession.builder().master("yarn").appName("CSOFullFillmentParquetPMExtraction").config("spark.sql.data.dir", destinationPath).enableHiveSupport().getOrCreate()

def covertParquet(tableName : String, tableSchema: StructType): Unit = {
var df = spark.read.schema(tableSchema).option("delimiter", "\u0001").option("nullValue","null").csv(csoPath+"/"+runDate+"/"+tableName+"/")
df.write.mode("overwrite").parquet(destinationPath+"/"+tableName.toUpperCase+"PM/")
}

try{
	
var orderHeaderSchema = StructType(Array(StructField("orderid",DecimalType(38,0),true), StructField("orderplacedate",TimestampType,true), StructField("departuredate",TimestampType,true), StructField("deliverydate",TimestampType,true), StructField("sourceprocessingdate",TimestampType,true), StructField("arrivdate",TimestampType,true), StructField("totalleadtime",DecimalType(38,0),true), StructField("loaddur",DecimalType(38,0),true), StructField("shipcaladjdur",DecimalType(38,0),true), StructField("transitdur",DecimalType(38,0),true), StructField("arrivcaladjdur",DecimalType(38,0),true), StructField("unloaddur",DecimalType(38,0),true), StructField("needcovdur",DecimalType(38,0),true), StructField("mincovdur",DecimalType(38,0),true), StructField("finalcovdate",TimestampType,true), StructField("mincovdate",TimestampType,true), StructField("needcovdate",TimestampType,true), StructField("finalcovdur",DecimalType(38,0),true), StructField("delaydur",DecimalType(38,0),true), StructField("status",DecimalType(38,0),true), StructField("orderskucount",DecimalType(38,0),true), StructField("orderskusoqcount",DecimalType(38,0),true), StructField("networkmincovdur",DecimalType(38,0),true), StructField("networkmincovdate",TimestampType,true), StructField("createdate",TimestampType,true), StructField("notes",StringType,true), StructField("maxcovdur",DecimalType(38,0),true), StructField("covduroverride",DecimalType(38,0),true), StructField("orderbuildrule",DecimalType(38,0),true), StructField("keepuseradjsw",DecimalType(1,0),true), StructField("duestatus",DecimalType(38,0),true), StructField("networkminstatus",DecimalType(38,0),true), StructField("loadsolutionstatus",DecimalType(38,0),true), StructField("loadstatus",DecimalType(38,0),true), StructField("approvalstatus",DecimalType(38,0),true), StructField("optimizforcedsw",DecimalType(1,0),true), StructField("precisionbuildsw",DecimalType(1,0),true), StructField("ordertype",DecimalType(38,0),true), StructField("transmode",StringType,true), StructField("dest",StringType,true), StructField("source",StringType,true), StructField("ordergroup",StringType,true), StructField("ordergroupmember",StringType,true), StructField("grouporderid",DecimalType(38,0),true), StructField("ordergroupparam",StringType,true), StructField("ordergroupbuildrule",DecimalType(1,0),true), StructField("precisionloadsw",DecimalType(1,0),true), StructField("currentbracketmaxqty",DoubleType,true), StructField("processconstrinvsw",DecimalType(1,0),true), StructField("u_approval_date",TimestampType,true), StructField("u_arrivdate",TimestampType,true), StructField("u_freight_min_met",StringType,true), StructField("u_hold_for_chgs",StringType,true), StructField("u_max_lines_exceeded",StringType,true), StructField("u_orderplacedate",TimestampType,true)))

var orderSkuSchema = StructType(Array(StructField("orderid",DecimalType(38,0),true), StructField("arrivdate",TimestampType,true), StructField("transmode",StringType,true), StructField("ordercovdate",TimestampType,true), StructField("mincovdate",TimestampType,true), StructField("orderpointdate",TimestampType,true), StructField("orderpointssqty",DoubleType,true), StructField("orderpointprojoh",DoubleType,true), StructField("status",DecimalType(38,0),true), StructField("adjskucovdate",TimestampType,true), StructField("orderuptoleveldate",TimestampType,true), StructField("orderuptolevelssqty",DoubleType,true), StructField("orderuptolevelprojoh",DoubleType,true), StructField("unroundedsoq",DoubleType,true), StructField("soq",DoubleType,true), StructField("delaydur",DecimalType(38,0),true), StructField("soqcovdur",DecimalType(38,0),true), StructField("usersoqoverriderule",DecimalType(38,0),true), StructField("usersoqcovduroverride",DecimalType(38,0),true), StructField("usersoqoverride",DoubleType,true), StructField("systemsoq",DoubleType,true), StructField("expdate",TimestampType,true), StructField("restrictedsoqcovdate",TimestampType,true), StructField("soqrestriction",DoubleType,true), StructField("unrestrictedsoq",DoubleType,true), StructField("userorderpointdate",TimestampType,true), StructField("orderplacedateprojoh",DoubleType,true), StructField("orderpointavailsupply",DoubleType,true), StructField("userorderuptoleveldate",TimestampType,true), StructField("orderuptolevelavailsupply",DoubleType,true), StructField("supporderqty",DoubleType,true), StructField("calcsoqsw",DecimalType(1,0),true), StructField("dest",StringType,true), StructField("source",StringType,true), StructField("item",LongType,true), StructField("fwdbuydur",DecimalType(38,0),true), StructField("fwdbuydate",TimestampType,true), StructField("fwdbuyqty",DoubleType,true), StructField("deal",StringType,true), StructField("finalunitcost",DoubleType,true), StructField("ordergroupmember",StringType,true), StructField("ordergroup",StringType,true), StructField("grouporderid",DecimalType(38,0),true), StructField("orderplacessdisplayqty",DoubleType,true), StructField("orderpointssdisplayqty",DoubleType,true), StructField("orderuptolevelssdisplayqty",DoubleType,true), StructField("breakpointadjqty",DoubleType,true), StructField("breakpointmargin",DoubleType,true), StructField("sourceinvstatus",DecimalType(38,0),true), StructField("constrsoq",DoubleType,true), StructField("unconstrsoq",DoubleType,true), StructField("constrallocsw",DecimalType(1,0),true), StructField("initialsupporderqty",DoubleType,true), StructField("supporderoutldate",TimestampType,true), StructField("u_forecaster_label",StringType,true), StructField("u_forecaster",StringType,true), StructField("u_planner_id",StringType,true), StructField("u_planner_label",StringType,true), StructField("u_prod_min_diff",DecimalType(10,2),true), StructField("u_prod_min_ind",StringType,true), StructField("u_prod_min",DecimalType(15,4),true), StructField("u_sku_apprv_sw",DecimalType(1,0),true), StructField("u_subitem",StringType,true), StructField("orderpointadjreasons",DecimalType(38,0),true), StructField("orderuptoleveladjreasons",DecimalType(38,0),true)))

var orderexceptionSchema=StructType(Array(StructField("exception",DecimalType(38,0),true),StructField("exceptiondate",TimestampType,true),StructField("when_time",TimestampType,true),StructField("descr",StringType,true),StructField("orderid",DecimalType(38,0),true),StructField("item",StringType,true),StructField("source",StringType,true),StructField("dest",StringType,true),StructField("transmode",StringType,true),StructField("ordergroup",StringType,true),StructField("ordergroupmember",StringType,true),StructField("grouporderid",DecimalType(38,0),true),StructField("chg_f",StringType,true)))

var ordertotalSchema=StructType(Array(StructField("orderid",DecimalType(38,0),true),StructField("type",LongType,true),StructField("uom",LongType,true),StructField("qty",DoubleType,true),StructField("unroundedqty",DoubleType,true),StructField("supporderqty",DoubleType,true),StructField("fwdbuyqty",DoubleType,true),StructField("chg_f",StringType,true)))

var orderskuTotalSchema = StructType(Array(StructField("qty",DoubleType,true), StructField("unroundedqty",DoubleType,true), StructField("uom",LongType,true), StructField("orderid",DecimalType(38,0),true), StructField("supporderqty",DoubleType,true),StructField("item",StringType,true), StructField("dest",StringType,true), StructField("fwdbuyqty",DoubleType,true)))

var orderskudetailSchema = StructType(Array(StructField("sourceprocessingdate",TimestampType,true), StructField("departuredate",TimestampType,true), StructField("deliverydate",TimestampType,true), StructField("totalleadtime",DecimalType(38,0),true),StructField("loaddur",DecimalType(38,0),true),StructField("shipcaladjdur",DecimalType(38,0),true),StructField("transitdur",DecimalType(38,0),true),StructField("arrivcaladjdur",DecimalType(38,0),true),StructField("unloaddur",DecimalType(38,0),true),StructField("adjskucovdur",DecimalType(38,0),true),StructField("avgreplenqty",DoubleType,true),StructField("stocklowdate",TimestampType,true),StructField("stocklowdur",DecimalType(38,0),true),StructField("stocklowqty",DoubleType,true),StructField("stockoutdate",TimestampType,true),StructField("stockoutdur",DecimalType(38,0),true),StructField("stockoutqty",DoubleType,true),StructField("arrivcovdur",DecimalType(38,0),true),StructField("orderid",DecimalType(38,0),true),StructField("proxydmdqty",DoubleType,true),StructField("proxysupplyqty",DoubleType,true),StructField("sysorderpointdate",TimestampType,true),StructField("sysorderuptoleveldate",TimestampType,true),StructField("precisionbuildsw",DecimalType(1,0),true),StructField("item",StringType,true),StructField("dest",StringType,true),StructField("precisionloadsw",DecimalType(1,0),true)));

/***** All Table TABLE EXTRACTION*****************/
var finalTableList  = Map("ORDERHEADER"->orderHeaderSchema,"ORDERSKU"->orderSkuSchema,"OrderException"->orderexceptionSchema,"OrderTotal"->ordertotalSchema,"OrderSKUTotal"->orderskuTotalSchema,"OrderSKUDetail"->orderskudetailSchema);
finalTableList.par.keys.foreach(i=>covertParquet(i,finalTableList(i)));

}catch{
case unknown: Exception => {
        println(s"Unknown exception: $unknown")
        //Failure(unknown)
      }
}finally{
	spark.close()
}
}